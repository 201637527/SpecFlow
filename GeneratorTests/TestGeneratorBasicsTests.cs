using System.Collections.Generic;
using System.Linq;
using System.Text;
using NUnit.Framework;
using TechTalk.SpecFlow.Generator;
using TechTalk.SpecFlow.Generator.Configuration;
using Should;
using TechTalk.SpecFlow.Generator.Interfaces;

namespace GeneratorTests
{
    [TestFixture]
    public class TestGeneratorBasicsTests : TestGeneratorTestsBase
    {
        private string GenerateTestFromSimpleFeature(GenerationSettings settings)
        {
            TestGenerator testGenerator = new TestGenerator(new GeneratorConfiguration());

            var result = testGenerator.GenerateTestFile(CreateSimpleValidFeatureFileInput(), settings);
            result.Success.ShouldBeTrue();
            return result.GeneratedTestCode;
        }

        [Test]
        public void Should_generate_a_net35_csharp_test_from_simple_feature()
        {
            string outputFile = GenerateTestFromSimpleFeature(net35CSSettings);
            outputFile.ShouldNotBeEmpty();
        }

        [Test]
        public void Should_generate_a_net35_vb_test_from_simple_feature()
        {
            string outputFile = GenerateTestFromSimpleFeature(net35VBSettings);
            outputFile.ShouldNotBeEmpty();
        }

        [Test]
        public void Should_include_header_in_generated_file()
        {
            string outputFile = GenerateTestFromSimpleFeature(net35CSSettings);
            outputFile.ShouldContain("This code was generated by SpecFlow");
        }

        [Test]
        public void Should_wrap_generated_test_with_designer_region()
        {
            string outputFile = GenerateTestFromSimpleFeature(net35CSSettings);
            outputFile.ShouldContain("#region Designer generated code");
            outputFile.ShouldContain("#endregion");
        }

        [Test]
        public void Should_include_generator_version_in_the_header()
        {
            string outputFile = GenerateTestFromSimpleFeature(net35CSSettings);
            outputFile.ShouldContain(string.Format("SpecFlow Generator Version:{0}", TestGeneratorFactory.GeneratorVersion));
        }
    }
}
